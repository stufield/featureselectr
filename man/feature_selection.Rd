% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/feature-selection.R
\name{feature_selection}
\alias{feature_selection}
\alias{print.feature_select}
\alias{is_feature_select}
\alias{update.feature_select}
\title{Feature Selection Object Declaration}
\usage{
feature_selection(
  data,
  candidate_markers,
  model_type,
  search_type,
  runs = 1L,
  folds = 1L,
  cost = c("AUC", "R2", "CCC", "MSE", "sens", "spec"),
  keep_models = FALSE,
  bootstrap = FALSE,
  stratified = FALSE,
  strat_column = NULL,
  random_seed = 101L
)

\method{print}{feature_select}(x, ...)

is_feature_select(x)

\method{update}{feature_select}(object, ...)
}
\arguments{
\item{data}{A \code{data.frame} containing features and clinical
data suitable for modeling.}

\item{candidate_markers}{\code{character(n)}. List of candidate markers,
i.e. columns names, from the data object.}

\item{model_type}{An instantiated \code{model_type} object, generated via a call
to one of the \code{\link[=model_type]{model_type()}} functions.}

\item{search_type}{An instantiated \code{search_type} object, generated via a
call to one of the \code{\link[=search_type]{search_type()}} functions.}

\item{runs}{\code{integer(1)}. How many runs to perform.}

\item{folds}{\code{integer(1)}. How many fold cross-validation to perform.}

\item{cost}{\code{character(1)}. A string to be used in defining the cost
function. One of:
\describe{
\item{\code{AUC}}{Area Under the Curve}
\item{\code{MSE}}{Mean-Squared Error}
\item{\code{CCC}}{Concordance Correlation Coefficient}
\item{\code{R2}}{R-squared - regression models}
\item{\code{sens} or \code{spec}}{Sensitivity + Specificity}
}}

\item{keep_models}{\code{logical(1)}. Should model objects be retained in the
cross validation sub-list? This eats up memory (\code{default = FALSE}).}

\item{bootstrap}{\code{logical(1)}. Should data be bootstrapped rather
than set up in cross-validation folds? The result is multiple runs (defined
by runs) with 1 Fold each. The full dataset will be sampled with replacement
to generate a training set of equivalent size. The samples not chosen during
sampling make up the test set.}

\item{stratified}{\code{logical(1)}. Should cross-validation or bootstrap
folds be stratified based upon the stratification column specified in
\code{strat_column}?}

\item{strat_column}{\code{character(1)}. Which column to use for stratification of
cross-validation or bootstrap folds. If \code{NULL} (default), column name
\code{"Response"} will be used and thus must be present.}

\item{random_seed}{\code{integer(1)}. Used to control the random number generator for
reproducibility.}

\item{x}{A \code{feature_select} class object.}

\item{...}{Arguments declared for update in \code{argument = value} format.
Non-declared arguments from the \emph{original} call are preserved.}

\item{object}{An object of class \code{feature_select}.}
}
\value{
A \code{"feature_select"} class object and list containing:
\item{data}{The original feature data to use.}
\item{candidate_markers}{The list of candidate features.}
\item{model_type}{A list containing model type variables of the
appropriate class for the desired model type.}
\item{search_type}{A list containing search type variables of the
appropriate class for the desired search type.}
\item{cost}{A string of the type of cost function.}
\item{cost_fxn}{A list containing cost variables of the
appropriate class for the desired object cost function.}
\item{runs}{The number of runs.}
\item{folds}{The number of folds.}
\item{keep_models}{If intermediate cross-validation models are kept?}
\item{bootstrap}{Is bootstrapping performed?}
\item{stratified}{Is cross-validation stratification performed?}
\item{strat_column}{Which field string is used in stratification.}
\item{random_seed}{The random seed used}
\item{cross_val}{A list containing the training and test indices of the
various cross validation folds.}
\item{search_complete}{Logical if the object has completed a search}
\item{call}{The original matched call.}
}
\description{
Declares and generates a \code{feature_selection} class object within the
Feature Selection framework. This object acts as the holder of data
(bootstrapped or cross-validation folds), model type, search type,
cost function, and an underlying data structure for use by other functions.
}
\section{Functions}{
\itemize{
\item \code{is_feature_select()}: Check if a valid \code{feature_select} class object.

}}
\examples{
# Simulated Test Data
data <- wranglr::simdata

# Setup response variable
data$class_response <- factor(data$class_response)

mt <- model_type_lr(response = "class_response")
cf <- "sens"
sm <- search_type_forward_model(15L, display_name = "FeatureSelection Plot")
ft <- featureselectr:::get_analytes(data) # select candidate features
fs <- feature_selection(data, candidate_markers = ft,
                        model_type = mt, search_type = sm, cost = cf,
                        strat_column = "class_response", runs = 5, folds = 5)
# S3 Print method
fs

# Using the S3 Update method to modify existing FS object:
# change model type, cost function, and random seed
fs2 <- update(fs, model_type = model_type_nb(),
              cost = "AUC", random_seed = 99L)
fs2

# change number of runs & folds
# requires re-calculation of cross-validation parameters
fs3 <- update(fs, runs = 20L, folds = 10L)
fs3

}
\references{
Hastie, Tibshirani, and Friedman.
Elements of Statistical Learning: Data Mining, Inference, and Prediction.
\emph{2nd Ed}. Springer. 2009.
}
\seealso{
\code{\link[=Search]{Search()}}
}
\author{
Kirk DeLisle, Stu Field
}
